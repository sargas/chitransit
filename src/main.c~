#include <gtk/gtk.h>

/* type definitions */

typedef struct {
	GtkWidget *search_entry;
	GtkWidget *filter_combo;
} ApplicationData;

/* signal callbacks */
static void search_toggle_cb (GtkWidget * button, ApplicationData * data);

int main (int argc, char **argv) {
	GtkWidget *window, *notebook, *icon;
	GtkWidget *box, *hbox, *toolbar, *details, *navigation, *w;
	GtkTreeViewColumn *column;
	GtkWidget *widget;
	GtkToolItem *toolitem;
	GtkListStore *liststore;
	GtkTreeIter it;
	ApplicationData *data;

	gtk_init (&argc, &argv);

	data = g_new0 (ApplicationData, 1);

	/* main window */
	window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
	g_signal_connect (G_OBJECT (window), "delete-event", 
		(GCallback) gtk_main_quit, NULL);
	gtk_window_set_title (GTK_WINDOW (window), "ChiTransit");

	/* main notebook */
	notebook = gtk_notebook_new ();
	gtk_container_add (GTK_CONTAINER (window), notebook);
	gtk_notebook_set_tab_pos (GTK_NOTEBOOK (notebook), GTK_POS_BOTTOM);
	
	

	/* navigation */
	box = gtk_vbox_new (FALSE, 0);
	gtk_notebook_append_page (GTK_NOTEBOOK (notebook), box,
				  gtk_image_new_from_stock (GTK_STOCK_INDEX,
						  GTK_ICON_SIZE_LARGE_TOOLBAR));
	gtk_container_child_set (GTK_CONTAINER (notebook), box, "tab-expand",
				 TRUE, NULL);
	
	
	
	/* let's go! */
	gtk_widget_show_all (window);
	gtk_main ();

	g_free (data);
	return 0;
}